#lang racket

(define (element-of-set? x set)
  (cond ((null? set) false)
        ((equal? x (car set)))
        (else (element-of-set? x (cdr set)))))

(define (adjoin-set x set)
  (if (element-of-set? x set)
      set
      (cons x set)))

; testing

(element-of-set? 'a '(1 2 a b))
(adjoin-set 'a '(1 2 a b))
(adjoin-set 'a '(1 2 c b))